LA CAMARA NO SE MUEVE, NI SE ROTA, SI SE ESCALA. Por lo tanto, el View de hace 1 sola vez. No es necesario cambiarlo. Se define una sola vez.
PROYECCION SE HACE UNA SOLA VEZ. Porque solo se usa en 3D o 2D. (DEFINIR EN EL START COMO PARAMETRO).
MODELO (M) DEBE SER MODIFICADA CADA VEZ QUE SE ACTUALIZA EL ENGINE, ES DECIR, CADA VEZ QUE SE CAMBIA LA MATRIZ TRS.

SetRot(x) va a cambiar la mat de rotacion y despues va a multiplicar nuevamente M*V*P, dando como resultado la forma girada.

El draw de entity manda un array de vertices, luego llama al draw de renderer y ese dibuja.
Se puede crear una lista para renderisar las boludeces pero no es optimo.

Vertex shader. 3 vertices
DrawArrays(verts[[],[],[]]) Funcionacon un Vertex Buffer
DrawElements() Funciona con un Index Buffer (que es alimentado por un vertex buffer).
Se le especifica cuantos indices se les va a pasar
Formato: Piuntero de atributo
ID=0 -> Pos
Tipo de dato -> float
Cant -> 2*Sizeof(float) a esto*
Comienzo -> vertice     y a esto* 
*Se lo conoce como OffsetStride.
